{"version":3,"sources":["../../src/utils/crypto.ts","../../src/utils/file.ts","../../src/utils/go-safe.ts","../../src/utils/json.ts","../../src/utils/object.ts"],"sourcesContent":["import { base64url } from 'jose';\n\nconst BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n\n/**\n * Generates a random 32-bit unsigned integer.\n * @returns {Promise<number>} A promise that resolves to a random 32-bit unsigned integer.\n */\nexport const random32 = async (): Promise<number> => {\n  return new Uint32Array(crypto.getRandomValues(new Uint8Array(4)).buffer)[0];\n};\n\n/**\n * Generates a random 64-character base64url encoded string.\n * @returns {string} A random 64-character base64url encoded string.\n */\nexport const random64 = (): string => {\n  return base64url.encode(crypto.getRandomValues(new Uint8Array(20)));\n};\n\n/**\n * Converts a secret string into a JWE key using SHA-256 hashing.\n * @param {string} secret - The secret string to be hashed.\n * @returns {Promise<Uint8Array>} A promise that resolves to a Uint8Array representing the JWE key.\n */\nexport const toJweKey = async (secret: string): Promise<Uint8Array> => {\n  const hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(secret));\n\n  return new Uint8Array(hash);\n};\n\n/**\n * Shuffles an array of strings using a Fisher-Yates algorithm.\n * @param {string[]} arr - The array of strings to shuffle.\n * @returns {string[]} A new array containing the shuffled strings.\n */\nexport const shuffle = (arr: string[]): string[] => {\n  return arr\n    .map((a): [number, string] => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n};\n\n/**\n * Generates a random salt of specified length.\n * @param {number} [length=16] - The length of the salt to generate. Defaults to 16.\n * @returns {string} A hexadecimal string representing the random salt.\n */\nexport function randomSalt(length = 16): string {\n  const randomBytes = crypto.getRandomValues(new Uint8Array(length));\n\n  return toHex(Array.from(randomBytes));\n}\n\n/**\n * Compares two strings in a timing-safe manner to prevent timing attacks.\n * @param {string} a - The first string to compare.\n * @param {string} b - The second string to compare.\n * @returns {boolean} True if the strings are equal, false otherwise.\n */\nexport function timingSafeCompare(a: string, b: string): boolean {\n  if (a.length !== b.length) return false;\n\n  // constant-time compare each character\n  let mismatch = 0;\n  for (let i = 0; i < a.length; i++) {\n    mismatch |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  }\n\n  return mismatch === 0;\n}\n\n/**\n * Converts a buffer of numbers to a hexadecimal string.\n * @param {number[]} valueBuffer - An array of numbers representing the byte values.\n * @returns {string} A hexadecimal string representation of the input buffer.\n */\nexport const toHex = (valueBuffer: number[]): string => valueBuffer.map(byte => byte.toString(16).padStart(2, '0')).join('');\n\n/**\n * Encodes data into a base64url string.\n * @param {Uint8Array | string} data - The data to encode. Can be either a Uint8Array or a string.\n * @returns {string} The base64url encoded string.\n */\nexport const base64Encode = (data: Uint8Array | string) => base64url.encode(data);\n\n/**\n * Decodes a base64url string into a decoded string.\n * @param {Uint8Array | string} data - The base64url encoded data to decode.\n * @returns {string} The decoded string.\n */\nexport const base64Decode = (data: Uint8Array | string) => {\n  const decoder = new TextDecoder();\n  return decoder.decode(base64url.decode(data));\n};\n\n/**\n * Converts a decimal number to a string representation using a custom base system.\n *\n * @param num - The non-negative number to convert\n * @returns A string representation of the number in the custom base\n * @throws {Error} If the input is negative\n */\nexport const toBase = (num: number): string => {\n  const baseLength = BASE_CHARS.length;\n  if (num < 0) throw new Error('Input must be a non-negative number');\n  if (num < baseLength) return BASE_CHARS[num];\n\n  let result = '';\n  let remainder = num;\n\n  while (remainder > 0) {\n    const index = (remainder - 1) % baseLength;\n    result = BASE_CHARS[index] + result;\n    remainder = Math.floor((remainder - 1) / baseLength);\n  }\n\n  return result;\n};\n","/**\n * Converts a file URL to its base directory path.\n *\n * @remarks\n * This function takes a file URL (either from `import.meta.url` in development or a worker URL in production)\n * and returns the directory path without the filename. It handles both file system paths and web URLs.\n *\n * @param fileurl - The file URL to convert. This could be:\n *   - A local file URL (e.g., 'file:///path/to/node_modules/@ycore/foundry/auth/routes.ts')\n *   - A production worker URL (e.g., 'https://your-worker.your-account.workers.dev/node_modules/@ycore/foundry/auth/routes.ts')\n *\n * @returns The base directory path from the URL with the filename removed.\n *   For the above examples, it would return:\n *   - '/path/to/node_modules/@ycore/foundry/auth'\n *   - '/node_modules/@ycore/foundry/auth'\n *\n * @example\n * ```typescript\n * // Development environment\n * const devPath = basePath('file:///project/node_modules/module/file.ts');\n * // Returns: '/project/node_modules/module'\n *\n * // Production environment\n * const prodPath = basePath('https://worker.dev/node_modules/module/file.ts');\n * // Returns: '/node_modules/module'\n * ```\n */\nexport const basePath = (fileurl: string) => {\n  const url = new URL(fileurl);\n  const pathParts = url.pathname.split('/');\n  pathParts.pop();\n  return pathParts.join('/');\n};\n","// https://betterprogramming.pub/typescript-with-go-rust-errors-no-try-catch-heresy-da0e43ce5f78\n// https://github.com/mpiorowski/rusve/server/src/lib/safe.js\n// https://github.com/scopsy/await-to-js\n\nconst NATIVE_EXCEPTIONS = [EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError];\n\nexport type SafeResponse<D, E = Error> = [undefined, E] | [D, null];\n// Overloads\nexport function go<D>(promise: Promise<D>, throwNative?: boolean): Promise<SafeResponse<D>>;\nexport function go<D>(fn: () => D, throwNative?: boolean): SafeResponse<D>;\n// Implementation\nexport function go<D>(promiseOrFunc: Promise<D> | (() => D), throwNative = false): Promise<SafeResponse<D>> | SafeResponse<D> {\n  return promiseOrFunc instanceof Promise ? goAsync(promiseOrFunc, throwNative) : goSync(promiseOrFunc, throwNative);\n}\n\nasync function goAsync<D>(promise: Promise<D>, throwNative: boolean): Promise<SafeResponse<D>> {\n  try {\n    return [await promise, null];\n  } catch (e) {\n    return returnException(e, throwNative);\n  }\n}\n\nfunction goSync<D>(func: () => D, throwNative: boolean): SafeResponse<D> {\n  try {\n    const result = func();\n    return [result, null];\n  } catch (e) {\n    return returnException(e, throwNative);\n  }\n}\n\nfunction returnException(e: unknown, throwNative: boolean): [undefined, Error] {\n  if (throwNative && NATIVE_EXCEPTIONS.some(Exception => e instanceof Exception)) {\n    throw e;\n  }\n  return [undefined, e as Error];\n}\n\n// https://github.com/scopsy/await-to-js\n// export default function go<T, U = Error>(promise: Promise<T>, errorExt?: object): Promise<[U, undefined] | [null, T]> {\n//   const NATIVE_EXCEPTIONS = [EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError];\n\n//   return promise\n//     .then<[null, T]>((data: T) => [null, data])\n//     .catch<[U, undefined]>((err: U) => {\n//       for (const Exception of NATIVE_EXCEPTIONS) {\n//         if (typeof Exception === 'function' && err instanceof Exception) {\n//           throw err;\n//         }\n//       }\n\n//       if (errorExt) {\n//         const parsedError = Object.assign({}, err, errorExt);\n//         return [parsedError, undefined];\n//       }\n\n//       return [err, undefined];\n//     });\n// }\n","interface MergeObject {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [mergeKey: string]: any;\n}\n\nexport const mergeJSON = (targetJson: MergeObject, ...mergesJson: MergeObject[]) => {\n  mergesJson.map((mergeJson) => {\n    for (const mergeKey in mergeJson) {\n      if (Object.prototype.hasOwnProperty.call(mergeJson, mergeKey)) {\n        const mergeValue = mergeJson[mergeKey];\n\n        if (typeof mergeValue === 'object' && !Array.isArray(mergeValue) && mergeValue !== null) {\n          if (!targetJson[mergeKey]) {\n            targetJson[mergeKey] = {};\n          }\n          mergeJSON(targetJson[mergeKey], mergeValue);\n        } else {\n          targetJson[mergeKey] = mergeValue;\n        }\n      }\n    }\n  });\n  return targetJson;\n};\n","export type DeepPartial<T> = { [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P] };\n\n// biome-ignore lint/suspicious/noExplicitAny:\nexport type FlexiblePartial<T> = { [P in keyof T]?: T[P] extends object ? FlexiblePartial<T[P]> : T[P] } & Record<string, any>;\n\n/**\n * Deep merges two objects, with overrides taking precedence\n * @param defaults The default values\n * @param overrides The override values (optional)\n * @returns A merged object\n */\nexport function deepMerge<T extends object>(defaults: T, overrides?: DeepPartial<T>): T {\n  if (!overrides) return { ...defaults };\n\n  const result = { ...defaults };\n\n  for (const key of Object.keys(overrides)) {\n    const k = key as keyof T & keyof DeepPartial<T>;\n    const value = overrides[k];\n\n    if (value !== null && typeof value === 'object' && !Array.isArray(value) && result[k] !== null && typeof result[k] === 'object' && !Array.isArray(result[k])) {\n      // biome-ignore lint/suspicious/noExplicitAny: Recursively merge objects\n      result[k] = deepMerge(result[k] as any, value as any) as any;\n    } else if (value !== undefined) {\n      // biome-ignore lint/suspicious/noExplicitAny: Only override if the value is defined\n      result[k] = value as any;\n    }\n  }\n\n  return result;\n}\n"],"mappings":"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","names":[]}